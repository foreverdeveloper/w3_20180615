Server-Sent Events :
	HTTP 환경에서 서버로부터의 데이터 푸시를 실제와 비슷하게 지원하기 위한
	클라이언트 API와 푸시 데이터를 정의한 사양

	HTTP에서 구현한 유사 데이터 푸시 기술 : Comet
	→ Server-Sent Events는 Comet을 표준화한 하나의 형태

	Server-Sent Events 클라이언트 API를 이용할 경우의 장점
		서버로부터 푸시 된 데이터를 수신하여 일반적인 DOM 이벤트처럼 처리함
		서버로부터 푸시 될 데이터의 형식은 엄격하게 정해져 있음
		PHP로 대표되는 서버 사이드 기술을 이용하면 아주 간단히 데이터를
		생성할 수 있음

SSE API의 사용법
	var myWorker = new Worker(‘자바스크립트파일URL’);
		myWorker.onmessage = function(event){
		alert(“Worker에 의해 실행된 콜백!\n”);
	};

<스크립트 작성법>
	Event Source에 이벤트에 스트림 받을 URL을 입력함
	URL에 대해 정기적으로 GET 요청 수행
	EventSource에 onmessage 핸들러를 지정함
	Data 속성에 푸시된 데이터가 저장됨


서버로부터의 푸시 데이터 형식
	text/event-stream이라는 MME 타입으로 보냄
		Charset 등의 파라미터는 필요 없음
	문자 인코딩 : UTF-8로 고정
	줄 바꿈 코드 : ‘/r/n’, ‘/n’, ‘/r/’ 어느 것이라도 유효함
	‘:’(콜론)으로 시작하는 줄 : 주석(무시)
	빈 줄이나 파일 끝 : 이벤트 구분자가 됨
	주석이나 빈 줄 이외는 ‘필드 이름: 필드 값’이라는 형식으로 작성됨
		필드 값이 없다면, 콜론 다음을 생략할 수 있음
		콜론과 필드 값 사이는 공백 하나를 포함할 수 있음

Web SQL Database
	HTML5와 함께 새로 생겨난 개념
	Web Storage 중 하나로 Client에 데이터를 저장
	풍부한 쿼리 능력을 가진 웹 어플리케이션 개발 지원
	클라이언트의 저장소에 영구 보존 가능
	체계적인 데이터 관리

비동기와 트랜잭션의 이해
	<Web Database>
		non-blocking 시스템 방식인 비동기 API 사용
		HTML을 통한 트랜잭션


Web Socket
	웹 서버와 웹 브라우저가 지속적으로 연결된 TCP 라인을 통해 실시간으로
	데이터를 주고 받을 수 있도록 함
	Comet의 대안으로 고안
	웹 어플리케이션이 Full-duplex(전이중 통신) 단일 소켓 연결이 가능
	서버와 브라우저 사이에 진정한 양방향 통신 제공
	XHR(XMLHttpRequest)보다 대역폭 소모가 적음


File API
	웹 어플리케이션이 로컬 파일에 프로그램적으로 접근할 수 있게 함
	읽기전용 상태로 접근된 것이기 때문에 실제 파일의 물리적 변형은
	일어나지 않음


















