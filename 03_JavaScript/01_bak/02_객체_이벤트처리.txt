JavaScript : 객체기반의 스크립트 언어
	JavaScript를 이루고 있는 거의 모든 것들이 객체로 존재함
	자신의 정보를 가지고 있는 독립적인 주체
	키(식별자 또는 문자열)와 값(속성)으로 이루어짐
	{ } 중괄호로 객체를 생성함
	객체의 속성 값에 접근할 때 키로 접근함
	객체의 키로 식별자가 아닌 문자를 사용했을 때는 무조건 대괄호를 사용하여 접근함

		var phone {
		name : ‘G3’,
		manufacturer : ‘LG’ };

	속성 : 객체 내부에 있는 값
		객체의 속성은 모든 형태의 자료형을 가질 수 있음

	메소드 : 객체의 속성 중 함수 자료형인 속성
		메소드 내에서 자기 자신이 가진 속성이라는 것을 표시할 때는
		this 키워드를 사용함
		다른 언어는 같은 객체 내부에서 this 키워드를 생략할 수 있지만,
		JavaScript에서는 this 키워드를 생략할 수 없음

		var phone {
			name : ‘G3’,
			manufacturer : function(company) {
			alert(this.name + ‘은(는)’ + company + ‘에서 개발한 제품입니다.’);
			}
		};
		phone.manufacturer(‘LG’);


JavaScript 객체의 개요
	배열 : 단순 for 반복문과 for in 반복문으로 요소에 쉽게 접근할 수 있음
	객체 : 단순 for 반복문으로 객체의 속성을 살펴보는 것은 불가능함
		모두 살펴보려면 for in 반복문을 사용해야 함
			var info {
				name : ‘홍길동’,
				age : 26,
				phone : ‘010-1234-5678’,
				address : ‘충남 천안’
			};
			var output = ‘’;
			for (var key in info) {
				output += ‘-’ + key + ‘ : ‘ + info[key] + ‘\n’;
			}
			alert(output);

	in 키워드
		for 키워드와 별도로 사용하면 해당 키가 객체 안에 있는지 확인할 수 있음
		속성이 존재하면 true, 존재하지 않으면 false를 출력함
			output += "name' in info: " + ('name' in info) + '\n';
			output += "e-mail' in info: " + ('e-mail' in info);

			alert(output);


 JavaScript 객체 관련 키워드
	with 키워드 : 복잡하게 사용해야 하는 코드를 짧게 줄여주는 키워드
		var info {
			name : ‘홍길동’,
			age : 26,
			phone : ‘010-1234-5678’,
			address : ‘충남 천안’
		};
	with 키워드를 사용하지 않은 경우
		var output = ‘’;
		output += ‘name : ’ + info.name + ‘\n’;
		output += ‘age : ’ + info.age + ‘\n’;
		output += ‘phone : ’ + info.phone + ‘\n’;
		output += ‘address : ’ + info.address + ‘\n’;
		alert(output);

	with 키워드를 사용한 경우
		var output = ‘’;
		with(info) {
			output += ‘name : ’ + name + ‘\n’;
			output += ‘age : ’ + age + ‘\n’;
			output += ‘phone : ’ + phone + ‘\n’;
			output += ‘address : ’ + address + ‘\n’;
		}
		alert(output);


이벤트 관련 용어
	이벤트 : 키보드 입력, 마우스 클릭과 같이 다른 것에 영향을 미치는 것
	이벤트의 유형 : 마우스 이벤트, HTML 프레임 이벤트, HTML 입력 양식 이벤트
		이벤트 연결 : window 객체의 onload 속성에 함수 자료형을 할당하는 것
		이벤트 이름(타입) : load
		이벤트 속성 : onload
		이벤트 리스너(핸들러) : 이벤트 속성에 할당한 함수
		이벤트 모델
		문서 객체에 이벤트를 연결하는 방법
		DOM Level 단계에 따라 두 가지로 분류하고 각기 두 가지로 나뉨


DOM Level
	DOM Level 0 : 인라인 이벤트 모델, 기본 이벤트 모델
	DOM Level 2 : 마이크로소프트 인터넷 익스플로러 이벤트 모델, 표준 이벤트 모델


JavaScript의 이벤트
이벤트 모델 및 객체
	인라인 이벤트 모델
		HTML 페이지의 가장 기본적인 이벤트 연결 방법
		한 번에 하나의 이벤트 리스너만을 가질 수 있음
			<body>
			<h1>Click</h1>
			</body>

	인터넷 익스플로러 이벤트 모델
		DOM Level 0 이벤트 모델들의 단점을 보완하기 위해 만들어진 DOM Level 2 이벤트 모델
		DOM Level 2 이벤트 모델의 유형 : 인터넷 익스플로러 모델, 표준 이벤트 모델
		국내에서는 인터넷 익스플로러 이벤트 모델을 많이 사용함
		이벤트를 연결하거나 제거할 때 사용하는 메소드
		attachEvent(eventProperty, eventListener);
		detachEvent(eventProperty, eventListener);

	표준 이벤트 모델
		W3C에서 공식적으로 지정한 DOM Level 2 이벤트 모델
		이벤트를 연결할 때 사용하는 메소드
		addEventListener(eventName, handler, useCapture)
		removeEventListener(eventName, handler)
		매개변수 useCapture는 입력하지 않으면 자동으로 false를 입력함
		이벤트 리스너 안에서 this 키워드가 이벤트 발생 객체를 의미함
		※ 주의사항 : 이벤트 이름은 매개변수로 입력해야 함














