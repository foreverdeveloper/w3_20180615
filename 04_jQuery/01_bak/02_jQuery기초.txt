jQuery
	2006년 “John Resic”에 의해 디자인 된 자바스크립트 라이브러리

jQuery의 특징
	단순화
		불필요한 코드를 줄이고 간결한 형식으로 단순화
		→ 가독성과 개발 효율성 ↑
	크로스 브라우징
		웹 표준에 기반을 두어 개발됨
		→ jQuery 하나로 다양한 브라우저에서 동작하는 코드 작성이 가능함
	효율적인 Selector
		다양한 Selector를 이용하여 원하는 요소를 선택함
		→ :empty, :odd, :even 등 다양한 Selector가 존재
	Ajax의 단순화
		jQuery를 이용하여 Ajax를 더욱 단순하게 만들 수 있음


jQuery의 기본문법
	jQuery 함수 = $()
	<script src="http://code.jquery.com/jquery-1.7.js">
		$(document).ready(function(){

		});
	</script>
	는
	<script>
		wiindow.onload = function(){

		};
	</script>
	는
	$(document).ready(function(){} ) = $(function() {} );


기본 선택자
	<전체 선텍자>
		HTML페이지에 있는 모든 객체를 선택하는 선택자
		$(‘*’).css(‘color’,’red’);

	<태그 선텍자>
		특정 태그를 선택하는 선택자
		$(‘h1’).css(‘color’,’Orange’);

	<다중 선택자>
		하나 이상의 태그 선택자를 동시에 사용
		콤마로 선택자 구분
		$(‘h1,p’).css(‘color’,’Orange’);

	<ID 선택자>
		ID 속성이 target인 문서 객체에 해당 스타일 적용
		앞에 ‘#’을 붙여서 사용
		$(‘#target’).css(‘color’,’Orange’);


 jQuery DOM 탐색
	선택자 기반 트리 탐색 메서드
		children(‘선택자’) : 선택자에 해당하는 자식을 선택
		.find(‘선택자’) : 선택자에 해당하는 자손을 선택
		.parent(‘선택자’) : 선택자에 해당하는 부모를 선택
		.parents(‘선택자’) : 선택자에 해당하는 조상을 선택
		.next(‘선택자’) : 선택자에 해당하는 다음 요소를 선택
		.nextAll(‘선택자’) : 선택자에 해당하는 모든 다음 요소를 선택
		.prev(‘선택자’) : 선택자에 해당하는 이전 다음 요소를 선택
		.prevAll(‘선택자’) : 선택자에 해당하는 모든 이전 요소를 선택
		.siblings(‘선택자’) : 선택자에 해당하는 형제 요소를 선택

	필터링 기반 트리 탐색 메서드
		.eq(n) : index가 n인 요소를 선택
		.filter() : 필터 함수를 적용하여 요소를 선택
		.has() : 특정 요소나 선택자를 가진 요소를 선택
		.first() : 첫 번째 요소를 선택
		.last() : 마지막 요소를 선택
		.not() : 선택된 요소를 제거
		.slice() : index가 start부터 end까지의 요소를 선택


 jQuery DOM 조작
	Class 속성 조작 메서드
		.addClass() : 선택된 요소에 Class 속성을 추가
		.removeClass() : 선택된 요소에 Class 속성을 제거
		.hasClass() : 선택된 요소에 해당 Class를 가졌는지 검사
		.toggleClass() : 선택된 요소에 Class 속성을 토글

	Style 조작 메서드
		.css() : 선택된 요소의 스타일 속성을 지정
		.width() : 선택된 요소의 너비를 지정하거나 받아옴
		.height() : 선택된 요소의 높이를 지정하거나 받아옴
		.offset() : 선택된 요소의 절대위치를 가져옴
		.position() : 선택된 요소의 상대위치를 가져옴


jQuery와 이벤트
	이벤트 연결 함수
		<jQuery 1.7 이전 버전>
			bind() : 현재 존재하는 문서 객체에만 이벤트를 연결
			delegate() : 현재 또는 미래에 존재하는 문서 객체에 이벤트를 연결
			live() : 현재 또는 미래에 존재하는 문서 객체에 이벤트를 연결
			one() : 한 번만 이벤트에 연결

		<jQuery 1.7 이후 버전>
			on() : 선택된 엘리먼트와 자식 엘리먼트를 위한 하나 이상의
			이벤트 핸들러를 첨부함
			일관성 있는 API를 많이 가져올 수 있다는 장점이 있음

			on() 함수 사용법
				$(selector).on(event, childSelector, data, function)
				옵션
					event(필수) :
						선택된 엘리먼트에 접근하기 위한 하나이상의 이벤트나
						네임스페이스를 지정
					childSelector(선택) :
						이벤트 핸들러는 오직 특정한 자식 엘리먼트에 접근해야 한다고 지정
					data(선택) :
						함수에 따라서 추가적인 데이터 지정
					function(필수) :
						이벤트가 발생할 때 실행되는 함수 지정

	이벤트 연결 해제 함수
		<jQuery 1.7 이전 버전>
			unbind() : bind()를 통해 연결한 이벤트를 제거
			die() : live()를 통해 연결한 이벤트를 제거
			undelegate() : delegate()를 통해 연결한 이벤트를 제거

		<jQuery 1.7 이후 버전>
			off() : on()를 통해 연결한 이벤트를 제거
					일관성 있는 API를 많이 가져올 수 있다는 장점이 있음

				Off()함수 사용법
					$(selector). off(event, selector, function(eventObj)
					옵션
						event(필수) :
							선택된 엘리먼트를 제거하기 위한 하나 이상의 이벤트
							또는 네임스페이스를 지정
						selector(선택) :
							이벤트 핸들러에 접근할 때 on 함수에 전달되는 selector와 동일해야 함
						function(eventObj)(선택) : 이벤트가 발생할 때 실행되는 함수를 지정


jQuery와 애니메이션
	애니메이션과 속성 값
		움직임에 관련된 속성
		단수 수치 값(Single Numeric Value)을 이용해서 움직임을 줄 수 있음
		==> 비수치형 속성 값들로는 애니메이션 효과를 줄 수 없음
	jQuery
		기본 기능으로 움직임을 줄 수 있음
		픽셀단위로 제어가능 할 수 있음
		em(이엠)과 %(퍼센트)같은 값 지원 가능
	지속시간 (Duration)
		시간(Durations)의 기본단위 : milliseconds(1000분의 1초)
			높은 값을 줄 경우 : 느리게 움직임
			작은 값을 줄 경우 : 빠르게 움직임
			값을 설정하지 않을 경우 : 400 milliseconds가 세팅됨
		문자열 사용 : ‘fast’와 ‘slow
			‘fast’ 수치 값 : 200 milliseconds
			‘slow’ 수치 값 : 600 milliseconds

콜백 함수 (Complete Function)
	콜백 함수를 인자로 설정하면 움직임이 완료된 다음에 해당하는 함수가 실행됨
	인자를 가질 수 없음
	this를 사용하면 움직임이 있었던 DOM 요소를 제어할 수 있음























































